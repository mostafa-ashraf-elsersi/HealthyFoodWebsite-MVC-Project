@model Logger

<!-- Profile-Update Alert -->
@if (ViewBag.ProfileUpdated == 1)
{
    <div id="profile-update-alert" class="alert alert-dismissible fixed-bottom bg-primary" style="margin-left: 10px; max-width: 300px; z-index: 100;">
        <button type="button" class="btn-close" onclick="closeProfileAlert()"></button>
        <span style="color: white; text-align: justify;">Profile updated successfully!</span>
    </div>
}
else if (ViewBag.ProfileUpdated == 0)
{
    <div id="profile-update-alert" class="alert alert-dismissible fixed-bottom bg-secondary" style="margin-left: 10px; max-width: 300px; z-index: 100;">
        <button type="button" class="btn-close" onclick="closeProfileAlert()"></button>
        <span style="color: white; text-align: justify;">Error occurred! Try again!</span>
    </div>
}
<!-- Profile-Update Alert -->

<!-- Page Header Start -->
<div class="container-fluid page-header wow fadeIn" data-wow-delay="0.1s">
    <div class="container d-none d-md-block">
        <h1 class="display-3 mb-3 animated slideInDown">Edit Profile</h1>
        <nav aria-label="breadcrumb animated slideInDown">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a class="text-body" asp-controller="Home" asp-action="GetView">Home</a></li>
                <li class="breadcrumb-item text-dark active" aria-current="page">Edit Profile</li>
            </ol>
        </nav>
    </div>
</div>
<!-- Page Header End -->

<!-- Profile-Update Form Start -->
<div class="container-fluid bg-light bg-icon py-5 mb-0">

    <div class="container">
        <div class="section-header text-center mx-auto my-5 wow fadeInUp" data-wow-delay="0.1s" style="max-width: 1000px;">
            <div>
                <h1 id="page-main-element-1" class="display-5">Update @ViewBag.AccountTypeWord Profile</h1>
            </div>
            <br />
            <form method="post" class="text-start" onsubmit="return confirmForm()">
                <div class="form-floating mb-4">
                    <input asp-for=FullName class="form-control" placeholder="">
                    <label asp-for=FullName>Full Name</label>
                    <span asp-validation-for="FullName" class="text-danger"></span>
                </div>
                <div class="form-floating mb-4">
                    <input asp-for=Username class="form-control" placeholder="">
                    <label asp-for=Username>Username</label>
                    <span asp-validation-for="Username" class="text-danger"></span>
                </div>
                <div class="form-floating mb-4">
                    <input asp-for=Email class="form-control" placeholder="">
                    <label asp-for=Email>Email</label>
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                @if (User.IsInRole("BusinessOwner") && ViewBag.AccountTypeWord == "Admin")
                {
                    <div class="form-floating mb-4">
                        <input asp-for=Password class="form-control" placeholder="" value="@Model.Password">
                        <label asp-for=Password>Password</label>
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-4">
                        <input asp-for=ConfirmingPassword class="form-control" placeholder="" value="@Model.Password">
                        <label asp-for=ConfirmingPassword>Confirm Password</label>
                        <span asp-validation-for="ConfirmingPassword" class="text-danger"></span>
                    </div>
                }
                <div class="form-floating mb-4">
                    <input asp-for=PhoneNumber class="form-control" placeholder="">
                    <label asp-for=PhoneNumber>Phone Number</label>
                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                </div>
                @if (User.IsInRole("BusinessOwner"))
                {
                    <div>
                        <select class="form-select" style="height: 60px;" id="role" aria-label="Choose Role" asp-for=Role>
                            <option value="ChooseARole" selected>Choose a role...</option>
                            <option value="BusinessOwner">Business Owner</option>
                            <option value="Admin">Admin</option>
                            <option value="User">User</option>
                        </select>
                        <span asp-validation-for="Role" class="text-danger"></span>
                    </div>
                    @if (Model.Role != "Admin")
                    {
                        <div class="mb-4" style="text-align: justify;">
                            <em>* Updating this field won't take actual effect until you sign out and re-sign in the system.</em>
                        </div>
                    }
                    else
                    {
                        <div class="mb-4" style="text-align: justify;">
                            <em>* Updating this field is irreversible, you'll be hence redirected to admins grid.</em>
                        </div>
                    }
                }
                <div class="d-flex justify-content-evenly">
                    <button type="submit" class="btn btn-primary">Update</button>
                    <button type="reset" class="btn btn-secondary">Cancel</button>
                </div>
            </form>

            @if (Model.Role != "Admin")
            {
                <div class="d-flex flex-column my-5 pt-4 border-top">
                    <a class="btn btn-secondary py-2" asp-controller="Logger" asp-action="PasswordChangePortal">Change Your Password</a>
                </div>
            }

            @if (ViewBag.HasBlogSubscriptions == true)
            {
                <div id="subscriptions-cancellation-button" class="d-flex flex-column my-5 pt-4 border-top">
                    <!-- Button trigger modal -->
                    <button type="button" class="btn btn-danger py-2" data-bs-toggle="modal" data-bs-target="#cancelSubscriptionsStaticBackdrop">Cancel All Blog Subscriptions</button>
                </div>

                <!-- Modal -->
                <div class="modal fade" id="cancelSubscriptionsStaticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="blogPostsSubscriptionsCancellationModal" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h1 class="modal-title fs-5" id="staticBackdropLabel">Cancellation Confirmation!</h1>
                            </div>
                            <div class="modal-body text-start">
                                Are you sure you want to cancel all your blog posts subscriptions?
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary" onclick="cancelSubscriptionsAsync()" data-bs-dismiss="modal">Yes, I meant it</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="subscriptions-cancellation-alert" class="alert alert-dismissible alert-success mt-5 d-none">
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    <strong>Cancellation Done!</strong> You successfully cancelled all your blog subscriptions.
                </div>
            }
        </div>
    </div>

</div>
<!-- Profile-Update Form End -->

@section Scripts {
    <script>
        
        $(document).ready(() => {
            let usernameField = document.getElementById("Username");
            usernameField.setAttribute("readonly", "");
        });

        function confirmForm(){
            if (document.getElementById("Username").hasAttribute("readonly")) {
                return true;
            }
            else {
                return false;
            }
        }

        function closeProfileAlert() {
            let alertDiv = document.getElementById("profile-update-alert");
            alertDiv.classList.add(["d-none"]);
        }

        async function cancelSubscriptionsAsync(){
            $.support.cors = true;
            await $.ajax({
                url: `/BLogSubscriber/DeleteSubscriptions`,
                type: "GET",
                cache: false,
                success: (result, status, xhr) => {

                    if (result == true) {

                        const subscriptionsCancellationButton = document.getElementById('subscriptions-cancellation-button');
                        const subscriptionsCancellationAlert = document.getElementById('subscriptions-cancellation-alert');

                        subscriptionsCancellationButton.classList.add("d-none");
                        subscriptionsCancellationAlert.classList.remove("d-none");

                    }
                },
                error: (xhr, status, error) => { }
            });
        }

    </script>
}